---
name: test

on:
  workflow_call: {}
  workflow_dispatch:
    inputs:
      debug_unit:
        description: "start tmate before unit tests"
        type: boolean
        required: false
        default: false
      debug_e2e:
        description: "start tmate before e2e tests"
        type: boolean
        required: false
        default: false

jobs:
  unit:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: load env vars for workflow run
        run: |
          source .github/vars.env
          echo "GO_VERSION=$GO_VERSION" >> "$GITHUB_ENV"
          echo "GOTESTSUM_VERSION=$GOTESTSUM_VERSION" >> "$GITHUB_ENV"

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: ensure libscrapli is available
        run: |
          go run build/write_libscrapli_to_cache.go

      - name: install go test tools
        run: |
          go install gotest.tools/gotestsum@${{ env.GOTESTSUM_VERSION }}

      - name: setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_unit }}

      - name: unit tests
        run: |
          make test-race

  e2e:
    runs-on: ubuntu-latest

    # run e2e on main or prs pointing to main
    if: (github.ref_name == 'main' || github.base_ref == 'main') || (github.event_name == 'workflow_dispatch' && inputs.debug_e2e)

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: load env vars for workflow run
        run: |
          source .github/vars.env
          echo "GO_VERSION=$GO_VERSION" >> "$GITHUB_ENV"
          echo "GOTESTSUM_VERSION=$GOTESTSUM_VERSION" >> "$GITHUB_ENV"
          echo "SCRAPLI_CLAB_VERSION=$SCRAPLI_CLAB_VERSION" >> "$GITHUB_ENV"

      # launcher should be setting the network but seems to be having issues at least
      # on darwin, so just also create the bridge, worst case duplicated effort, not a big deal
      - name: run scrapli-clab
        run: |
          mkdir .clab || true
          rm -r .clab/* || true
          docker network rm clab || true
          docker network create \
              --driver bridge \
              --subnet=172.20.20.0/24 \
              --gateway=172.20.20.1 \
              --ipv6 \
              --subnet=2001:172:20:20::/64 \
              --gateway=2001:172:20:20::1 \
              --opt com.docker.network.driver.mtu=65535 \
              --label containerlab \
              clab
          docker run \
              -d \
              --rm \
              --name clab-launcher \
              --privileged \
              --pid=host \
              --stop-signal=SIGINT \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v /run/netns:/run/netns \
              -v "$(pwd):$(pwd)" \
              -e "WORKDIR=$(pwd)/.clab" \
              -e "HOST_ARCH=$(uname -m)" \
              -e CLAB_TOPO=topo.ci.amd64.yaml \
                "ghcr.io/scrapli/scrapli_clab/launcher:${{ env.SCRAPLI_CLAB_VERSION }}"

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: ensure libscrapli is available
        run: |
          go run build/write_libscrapli_to_cache.go

      - name: install go test tools
        run: |
          go install gotest.tools/gotestsum@${{ env.GOTESTSUM_VERSION }}

      - name: setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_e2e }}

      - name: wait for test nodes to be available
        working-directory: .clab
        run: |
          ./wait.sh

      - name: e2e tests
        run: |
          make test-e2e-ci
